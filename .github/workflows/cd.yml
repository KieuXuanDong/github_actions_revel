name: CD

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}

env:
    DOCKER_IMAGE_NAME: github-action-revel
    RELEASE_BRANCH: main

jobs:
  release:
    # マージされたときのみ実行
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: repository_lowercase
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      - name: Build docker image
        run: docker build -t ${{ env.DOCKER_IMAGE_NAME }} .
    
      - name: Push Docker Image
        run: docker push ghcr.io/${{ steps.repository_lowercase.outputs.lowercase }}/${{ env.DOCKER_IMAGE_NAME }}:latest

  create-release-tags:
    if: github.event.pull_request.merged == true
    needs: release

    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      # 前回のリリースタグを取得する
      - name: Get previous tag
        id: pre_tag
        run: |
          echo "pre_tag=$(curl -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)" >> $GITHUB_OUTPUT

      # タグを生成する 「{YYYY.MM.DD}-{当日リリース回数}」
      - name: Generate release tag
        id: release_tag
        env:
          TZ: 'Asia/Tokyo'
        run: |
          today=$(date +'%Y.%m.%d')
          pre_release_date=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $1}')
          pre_release_count=$(echo ${{ steps.pre_tag.outputs.pre_tag }} | awk -F'-' '{print $2}')
          if [[ ! $pre_release_date = $today ]]; then
            echo "init count"
            pre_release_count=0
          fi
          echo "release_tag=$today-$(($pre_release_count + 1))" >> $GITHUB_OUTPUT

      # タグを切り、リリースノートを作成する
      - name: Create Release
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{ \"tag_name\": \"${{ steps.release_tag.outputs.release_tag }}\", \"target_commitish\": \"${{ env.RELEASE_BRANCH }}\", \"name\": \"${{ steps.release_tag.outputs.release_tag }}\", \"body\": \"Release for ${{ steps.release_tag.outputs.release_tag }}\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases
